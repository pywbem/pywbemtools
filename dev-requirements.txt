# Additional pip requirements file for pywbemtools development dependencies.
#
# The order of packages is significant, because pip processes them in the order
# of appearance.

# Make sure that the package versions in minimum-constraints.txt are also
# the minimum versions required in requirements.txt and dev-requirements.txt.


-r requirements.txt

# Direct dependencies:

# Unit test (imports into testcases):
# pytest 5.0.0 requires Python version 3.5
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1,<5.0.0; python_version == '2.7'
pytest>=4.3.1; python_version >= '3.5'
# funcsigs is already specified in requirements.txt due to a dependency issue.
# funcsigs>=1.0.2; python_version == '2.7'
# Pluggy 0.12.0 has a bug causing pytest plugins to fail loading on py38
pluggy>=0.13.0
colorama>=0.3.9,<0.4.0; python_version == '2.7'
colorama>=0.4.0; python_version >= '3.5'
# flake8 fails with AttributeError in importlib-metadata 5.0.0 on Python >=3.7
# tox 3.14 requires importlib-metadata<1,>=0.12 on Python <=3.7
importlib-metadata>=0.22,<5.0.0; python_version <= '3.7'
importlib-metadata>=1.1.0; python_version >= '3.8'

# more-itertools version 8.11 requires python 3.6, See issue #2796
more-itertools>=4.0.0,!=8.11.0; python_version < '3.6'
more-itertools>=4.0.0; python_version >= '3.6'

# Virtualenv
virtualenv>=16.1.0,!=20.0.19,!=20.0.32; python_version <= '3.7'
virtualenv>=20.0.0; python_version >= '3.8'

# Coverage reporting (no imports, invoked via coveralls script):
coverage>=5.0
pytest-cov>=2.7.0
# coveralls 2.0 has removed support for Python 2.7
git+https://github.com/andy-maier/coveralls-python.git@andy/add-py27#egg=coveralls; python_version == '2.7'
coveralls>=2.1.2,<3.0.0; python_version >= '3.5'

# Safety CI by pyup.io
# safety 1.9.0 removed support for Python 2.7 (and now also enforces that)
safety>=1.8.7,<1.9.0; python_version == '2.7'
safety>=1.9.0,<2.0.0; python_version == '3.5'
safety>=2.2.0; python_version >= '3.6'

# dparse 0.5.0 has an infinite recursion issue on Python 2.7,
#   see https://github.com/pyupio/dparse/issues/46
dparse>=0.4.1,<0.5.0; python_version == '2.7'
dparse>=0.5.2; python_version == '3.5'
# ver 0.6.2 min requirement by safety 2.2.0
dparse>=0.6.2; python_version >= '3.6'

# PyYAML is also pulled in by dparse and python-coveralls
# PyYAML 5.3 fixed narrow build error on Python 2.7
# PyYAML 5.3.1 addressed issue 38100 reported by safety
# PyYAML 5.2 addressed issue 38639 reported by safety
# PyYAML 5.4.1 fixed install error on Python 3.10
PyYAML>=5.3.1; python_version == '2.7'
PyYAML>=5.3.1; python_version >= '3.5' and python_version <= '3.9'
PyYAML>=5.4.1; python_version >= '3.10'

# Sphinx (no imports, invoked via sphinx-build script):
# Keep in sync with rtd-requirements.txt
# Sphinx 2.0.0 removed support for Python 2.7
# Sphinx 4.0.0 breaks autodocsumm and needs to be excluded
# Sphinx <4.2.0 fails on Python 3.10 because it tries to import non-existing
#   types.Union. This also drives docutils>=0.14.
# Sphinx pins docutils to <0.18 (some versions even to <0.17) but the package
#   version resolver in the pip version used on py27 ignores package dependencies
Sphinx>=1.7.6,<2.0.0; python_version == '2.7'
Sphinx>=3.5.4,!=4.0.0; python_version >= '3.5' and python_version <= '3.9'
Sphinx>=4.2.0; python_version >= '3.10'
docutils>=0.13.1,<0.17; python_version == '2.7'
docutils>=0.13.1,<0.17; python_version >= '3.5' and python_version <= '3.9'
docutils>=0.14,<0.17; python_version >= '3.10'
sphinx-git>=10.1.1
GitPython>=2.1.1;
Pygments>=2.1.3; python_version == '2.7'
Pygments>=2.7.4; python_version >= '3.5'
# Issue #1218, bullet-list failure with v 0.5.2
sphinx-rtd-theme>=1.0.0
# Babel 2.7.0 fixes an ImportError for MutableMapping which starts failing on Python 3.10
Babel>=2.7.0

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 2.0 / astroid 2.0 removed py27, added py37
pylint>=2.4.4; python_version >= '3.5'
astroid>=2.3.3; python_version >= '3.5'
# typed-ast is used by astroid on py34..py37
typed-ast>=1.4.0,<1.5.0; python_version >= '3.5' and python_version < '3.8' and implementation_name=='cpython'
lazy-object-proxy>=1.4.3; python_version >= '3.5'
# platformdirs is used by pylint starting with its 2.10
platformdirs>=2.2.0; python_version >= '3.6'
# wrapt 1.13.0 started depending on MS Visual C++ 9.0 on Python 2.7 on Windows,
#   which is not available by default on GitHub Actions
wrapt>=1.11.2; python_version >= '3.5'
# dill is used by pylint >=2.13
dill>=0.2; python_version >= '3.6'

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 4.0.0 fixes an AttributeError on Python 3.10.
# flake8 4.0.1 fixes a TypeError on files with incorrect syntax.
flake8>=3.8.0; python_version == '2.7'
flake8>=3.8.0; python_version >= '3.5' and python_version <= '3.9'
flake8>=4.0.1; python_version >= '3.10'
mccabe>=0.6.0; python_version == '2.7'
mccabe>=0.6.0; python_version >= '3.5'
pycodestyle>=2.6.0,<2.8.0; python_version == '2.7'
pycodestyle>=2.6.0; python_version >= '3.5' and python_version <= '3.9'
pycodestyle>=2.8.0; python_version >= '3.10'
pyflakes>=2.2.0,<2.4.0; python_version == '2.7'
pyflakes>=2.2.0; python_version >= '3.5' and python_version <= '3.9'
pyflakes>=2.4.0; python_version >= '3.10'
entrypoints>=0.3.0
functools32>=3.2.3.post2; python_version == '2.7'  # technically: python_version < '3.2'

# Twine (no imports, invoked via twine script):
# twine 2.0.0 has removed support for Python 2.7, 3.5
twine>=1.15.0,<2.0.0; python_version <= '3.5'
twine>=2.0.0; python_version >= '3.6'
# readme-renderer 23.0 has made cmarkgfm part of extras (it fails on Cygwin)
readme-renderer>=23.0; python_version == '2.7'
readme-renderer>=23.0; python_version >= '3.5'

# Jupyter Notebook (no imports, invoked via jupyter script)
# TODO Future: currently jupyter not used by pywbemtools
# jupyter>=1.0.0

# Package dependency management tools
pipdeptree>=2.2.0
# pip-check-reqs 2.1.1 removed support for Python 2.7 but does not declare that.
# pip-check-reqs 2.0.4 (last version with Python 2.7 support) still uses
#   pip._internal.download which was removed in pip 20.0. That pip version does
#   not yet have proper dependency handling, so we do not install pip-check-reqs
#   on Python 2.7.
# pip-check-reqs 2.3.2 is needed to have proper support for pip<=21.3.
pip-check-reqs>=2.3.2; python_version >= '3.5' and python_version <= '3.10'
pip-check-reqs>=2.4.0; python_version >= '3.11'

# safety 2.3.5 started pinning packaging to <22.0 and requires >=21.0
packaging>=17.0; python_version == '2.7'
packaging>=17.0; python_version == '3.5'
packaging>=21.0,<22.0; python_version >= '3.6'


# Temporary workarounds on indirectly used packages:

# The tornado package is used by ipykernel which is used by jupyter.
# Tornado 5.0.0 and 5.0.1 rejects installation if the Python ssl module
# does not have certain symbols required by Tornado. This issue exists for
# example with Python 2.7.6 on Ubuntu 14.04, but not with Python 2.7.5 on
# RHEL 7.4. This can be checked with:
#   python -c "import ssl; ssl.SSLContext; ssl.create_default_context; ssl.match_hostname"
# Other projects have the same issue:
#   https://github.com/floydhub/dl-docker/issues/84
# The following is a circumvention of this issue that nails the tornado
# version to below 5.0 on Python 2.
# TODO: Follow up on resolution of this issue.
# TODO Future: enable with ipythontornado<5.0; python_version <= '2.7'

# Jinja2 is used by Sphinx, and pip needs explicit versions for this
# otherwise indirect dependency.
Jinja2>=2.8.1; python_version == '2.7'
Jinja2>=2.8.1; python_version >= '3.5'
